on:
  pull_request:
    types: [opened, edited]
name: Jira Issue Commenter

jobs:
  search:
    runs-on: ubuntu-latest
    name: Search PR for mentioned Jira Issues
    outputs:
      issues: ${{ steps.search.outputs.issues }}
    steps:
      - name: find issues
        id: search
        env:
          JIRA_BASE_URL: https://qmacbis.atlassian.net
        run: |
          body='${{ github.event.pull_request.body }}'
          cat <<< "${body@Q}" > .tmp.body.txt
          issues=(`cat .tmp.body.txt | grep -oe "\b${JIRA_BASE_URL}[^ ]*\b" || true`)
          issueJson=`jq -c -n '$ARGS.positional' --args "${issues[@]}"`
          echo "issueJson=$issueJson" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT
  comment:
    runs-on: ubuntu-latest
    name: Comment on Jira Issues
    strategy:
      matrix:
        value: ${{fromJson(needs.search.outputs.issues)}}
    steps:
      - name: test
        run: echo "hello"

      # - name: Login
      #   uses: atlassian/gajira-login@v3
      #   if: steps.find_issues.outputs.ISSUESTRING != ''
      #   env:
      #     JIRA_BASE_URL: https://qmacbis.atlassian.net
      #     JIRA_USER_EMAIL: ${{ secrets.JIRA_USERNAME }}
      #     JIRA_API_TOKEN: ${{ secrets.JIRA_TOKEN }}
      # - name: Comment on issue
      #   uses: atlassian/gajira-comment@v3
      #   if: steps.find_issues.outputs.ISSUESTRING != ''
      #   env:
      #     GH_EVENT: ${{ toJson(github) }}
      #   with:
      #     issue: ${{ steps.get_t.outputs.TICKET_NAME }}
      #     comment: ${{ github.event_name }} ${{ github.event.pull_request._links.html.href }}
